//2024年11月12日12:36:13

//1. const修饰指针-- - 常量(的)指针 
//2. const修饰常量-- - 指针(是)常量
//3. const即修饰指针，又修饰常量

//如何记忆：把英文翻译为中文，const：常量 *号:指针
//const(常量) int*(指针) p1――常量指针――const修饰*,取*操作(取值)就不能做了
//int*(指针) const(常量) p2――指针常量――const 修饰p2，指针不能变了

//指针本质上相当于一个箭头，常量表示不能改变
//常量(的)指针：指向常量(你和你对象)的箭头
//指针(是)常量：方向不变的箭头(你和你对象的房间)
#define _CRT_SECURE_NO_WARNINGS
#include <iostream>
#include <cstdio>
using namespace std;



int main()
{
	int a = 10;
	int b = 20;
	int* p = &a;

	const int* p1 = &a;  
	//1.常量(的)指针(指针前面加const)
	//特点：const修饰的是指针，指针指向可以改，指针指向的值不可以更改
	 p1 = &b;  //正确，指针指向可以改
	//*p1 = 20; //错误，指针指向的值不可以更改
	 //举例：你和你对象可以在酒店换房间(指针指向可以改)，
	 //但房间里的人――你和你对象(指针指向的值)不可以更改

	 //2.指针(是)常量
	 int* const p2 = &a;
	 //指针的指向不可以改，但是指针指向的值可以改
	 //p2 = &b; //错误
	 *p2 = 100; //正确

	 //3.const既修饰指针又修饰常量
	 const int* const p3 = &a;
	 //p3 = &b; //错误
	 //*p3 = 100; //错误
	system("PAUSE");
}
